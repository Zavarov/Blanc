package vartas.discord.bot.command;

/**
 * This grammar defines a subset of the different permissions on the Discord backend that are relevant for the commands.
 * If a command is executed but the person who called it doesn't have one or more of the permissions here, it should fail.
 */
component grammar Permission{
    abstract PermissionType;

    /*=========================================================*/
    /*=======================  Symbols  =======================*/
    /*=========================================================*/

    symbol Administrator extends PermissionType =
        name:"administrator";

    symbol ManageChannels extends PermissionType =
        name:"manage channels";

    symbol ManageServer extends PermissionType =
        name:"manage server";

    symbol ManageRoles extends PermissionType =
        name:"manage roles";

    symbol ManageMessages extends PermissionType =
        name:"manage messages";


    /*=========================================================*/
    /*======================= AST RULES =======================*/
    /*=========================================================*/

    astrule PermissionType =
        method public net.dv8tion.jda.core.Permission getPermissionType(){
            throw new UnsupportedOperationException("Please specify a permission corresponding to this type in the grammar.");
        }
    ;

    astrule Administrator =
        method public net.dv8tion.jda.core.Permission getPermissionType(){
            return net.dv8tion.jda.core.Permission.ADMINISTRATOR;
        }
    ;

    astrule ManageChannels =
        method public net.dv8tion.jda.core.Permission getPermissionType(){
            return net.dv8tion.jda.core.Permission.MANAGE_CHANNEL;
        }
    ;

    astrule ManageServer =
        method public net.dv8tion.jda.core.Permission getPermissionType(){
            return net.dv8tion.jda.core.Permission.MANAGE_SERVER;
        }
    ;

    astrule ManageRoles =
        method public net.dv8tion.jda.core.Permission getPermissionType(){
            return net.dv8tion.jda.core.Permission.MANAGE_ROLES;
        }
    ;

    astrule ManageMessages =
        method public net.dv8tion.jda.core.Permission getPermissionType(){
            return net.dv8tion.jda.core.Permission.MESSAGE_MANAGE;
        }
    ;
}